---
name: update

on:
  schedule:
    # run every day at 3am
    - cron: '0 3 * * *'

  workflow_dispatch:
   inputs:
      sleep_seconds:
       description: "Enter seconds to pause between requests (default: 10)"
       required: false
       default: '10'

jobs:
  update:
    runs-on: ubuntu-latest
    steps:
      - name: Run actions/checkout
        uses: actions/checkout@v3

      - name: Run actions/setup-python
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'
          cache: 'pip'

      - name: Run pip install -r requirements.txt
        run: |
          # Run pip install -r requirements.txt
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Run python update.py (can take up to 3 hours)
        run: python update.py ${{ github.event.inputs.sleep_seconds }}

      - name: Commit changes
        run: |
          set -x -v
          # Commit changes to repository
          git config --global user.name 'github-actions[bot]'
          git config --global user.email 'github-actions[bot]@users.noreply.github.com'

          function commit() {
            printf "Found %s changed %s file(s)\n" "${#MAPFILE[@]}" "$1"
            if ((${#MAPFILE[@]}==0)); then
              return 0
            fi
            # create individual commit per updated manifest
            commits=0
            for file in "${MAPFILE[@]}"; do
              if [[ "${file}" =~ bucket/.*\.json$ ]]; then
                manifest=$(basename "${file}" .json)
                version=$(jq -r .version <"${file}")
                git add "${file}"
                git commit -m "${manifest}: Update to version ${version}"
                ((commits++))
                continue
              fi
              if [[ ${file} =~ urls\.csv$ ]]; then
                git add "${file}"
                git commit -m "Update url list [ci skip]"
                ((commits++))
                continue
              fi
              printf "UH OH! Found unexpected changed file '%s'\n" "${file}"
            done
            printf "Committed %s of %s changed files\n" "${commits}" "${#MAPFILE[@]}"
            return 0
          }

          mapfile -t < <(git diff --ignore-all-space --name-only --no-color)
          commit "existing"

          mapfile -t < <(git ls-files bucket/*.json --others --exclude-standard)
          commit "new"

          exit 0

      - name: Run ad-m/github-push-action
        uses: ad-m/github-push-action@v0.6.0
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          branch: master
